apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-snip
  namespace: development
  annotations:
    ad.datadoghq.com/gateway-snip.logs: '[{"source":"gateway-snip","service":"gateway-snip"}]'
  labels:
    app: gateway-snip
    tags.datadoghq.com/env: development
    tags.datadoghq.com/service: gateway-snip
    tags.datadoghq.com/version: "1.0"
      
spec:
  selector:
    matchLabels:
      app: gateway-snip
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate: 
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        ad.datadoghq.com/gateway-snip.logs: '[{"source":"gateway-snip","service":"gateway-snip"}]'
      labels:
        app: gateway-snip
        tags.datadoghq.com/env: development
        tags.datadoghq.com/service: gateway-snip
        tags.datadoghq.com/version: "1.0"
    spec:
      containers:
      - name: gateway-snip
        image: rjamal/gateway-snip:development
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "256Mi" # 64MB
            cpu: "250m" # 0.5 core
          limits:
            memory: "1G" # 128MB
            cpu: "1" # 1 core
        volumeMounts:
          - name: apmsocketpath
            mountPath: /var/run/datadog
        env:
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/env']
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/service']
          - name: DD_VERSION
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/version']
      imagePullSecrets:
      - name: regcred
      securityContext: {}
      volumes:
        - hostPath:
            path: /var/run/datadog/
          name: apmsocketpath
